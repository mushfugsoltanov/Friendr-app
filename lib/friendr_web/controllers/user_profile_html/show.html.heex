<style>
  body {
    background-color: #f5f5f5;
    color: #333;
    margin: 0;
    padding: 0;
  }

  .profile-container {
    max-width: 1000px;
    margin: 20px auto;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    padding: 20px;
    box-sizing: border-box;
    position: relative;
    z-index: 2;
    display: flex;
  }

  .profile-photo {
    flex: 0 0 150px;
    height: 150px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 20px;
  }

  .profile-photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .profile-info {
    flex: 1;
  }

  h1 {
    color: #333;
    font-size: 3.5rem;
    margin-bottom: 10px;
  }

  p {
    color: #666;
    margin: 10px 0;
    font-size: 2.1rem;
  }

  .edit-button {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin-top: 20px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
    position: relative;
    overflow: hidden;
  }

  .edit-button:hover {
    background-color: #45a049;
  }

  .edit-button:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    transition: width 0.3s;
  }

  .edit-button:hover:before {
    width: 100%;
  }

  main {
    background-image: url("https://static1.srcdn.com/wordpress/wp-content/uploads/2021/01/A-collage-of-the-faces-of-the-main-cast-of-Friends-all-smiling-slightly.jpg");
    background-size: cover;
    background-position: center;
  }
   .request_container {
    max-width: 1000px;
    margin: 20px auto;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    padding: 20px;
    box-sizing: border-box;
    position: relative;
    z-index: 2;
    text-align: center;
  }
table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }

    th, td {
      border: 1px solid #34495e;
      padding: 12px;
      text-align: left;
    }

    th {
      background-color: #2c3e50;
      color: #fff;
      font-weight: bold;
    }

    tr:nth-child(even) {
      background-color: #34495e;
    }

    tr:nth-child(odd) {
      background-color: #2c3e50;
    }

    td {
      color: #fff;
    }
    .accepted-button {
      background-color: #3498db !important;
    }

    .accepted-button:hover {
      background-color: #2980b9 !important;
      cursor: pointer !important;
    }

    .ignore-button {
      background-color: #95a5a6 !important;
    }

    .ignore-button:hover {
      background-color: #7f8c8d !important;
    }
    .accepted-button, .ignore-button{
      border: 2px solid #2c3e50;
      color: #fff;
      font-size: 14px;
      padding: 8px 16px;
      border-radius: 5px;
      cursor: pointer;
      outline: none !important;
    }
    .request-id {
      display: none !important;
    }
</style>

<div class="profile-container">
  <div class="profile-photo">
    <img src="https://via.placeholder.com/150" alt="Default Profile Photo">
  </div>

  <div class="profile-info">
    <h1>User Profile</h1>



    <p><strong>Name:</strong> <%= @user.name %></p>
    <p><strong>Date of Birth:</strong> <%= @user.date_of_birth %></p>
    <p><strong>Phone Number:</strong> <%= @user.phone %></p>
    <p><strong>Bio:</strong> <%= @user.description %></p>
    <p><strong>Location:</strong> <%= @user.location %></p>
    <p><strong>Interests:</strong>
      <%= for interest <- @user.interests, interest.relationship == 1 do %>
        <%= interest.topic.name %>
      <% end %>
    </p>
    <p><strong>Hates:</strong>
      <%= for interest <- @user.interests, interest.relationship == 0 do %>
        <%= interest.topic.name %>
      <% end %>
    </p>
    <a href={~p"/user/profile/edit"} class="edit-button" id="edit-button">Edit Profile</a>
  </div>


</div>

<div class="request_container">

 <h1>Friendship Requests</h1>
  <table class="min-w-full bg-white border border-gray-300">
        <thead>
          <tr>
            <th class="px-4 py-2 border-b border-gray-300">Name</th>
            <th class="px-4 py-2 border-b border-gray-300">Location</th>
             <th class="px-4 py-2 border-b border-gray-300">Status</th>
            <th class="px-4 py-2 border-b border-gray-300">Actions</th>
          </tr>
        </thead>
        <tbody>

      <%= for request <- @user.received_friendship_requests do %>
         <tr>
          <%= if request.status == "pending" do %>
                <td class="border px-4 py-2"><%= request.sender.name %></td>
                <td class="border px-4 py-2"><%= request.sender.location %></td>
                 <td class="border px-4 py-2"><%= request.status %></td>
                 <td class="border px-4 py-2">

                    <form id="friendship-request-form" method="post">
                    <p name="request_id" type="hidden" class="request-id"><%= request.id %></p>
                      <button type="button" class="accepted-button">Accept interest</button>
                      <button type="button" class="ignore-button">Decline interest</button>
                    </form>

                </td>
                 <% end %>
              </tr>
      <% end %>
      </tbody>
    </table>
</div>


  <script>
    const requestIdElements = document.querySelectorAll(".request-id");
    const csrfToken = document.querySelector("meta[name='csrf-token']").getAttribute("content");
    const friendshipRequestForm = document.getElementById("friendship-request-form");


    requestIdElements.forEach((requestIdElement) => {
      const requestId = requestIdElement.textContent;
      const acceptButton = requestIdElement.closest("tr").querySelector(".accepted-button");
      const declineButton = requestIdElement.closest("tr").querySelector(".ignore-button");

      acceptButton.addEventListener("click", function () {
        fetch("/friendship_request/accept", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-TOKEN": csrfToken,
          },
          body: JSON.stringify({ request_id: requestId}),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            if (data.status === "success") {
              console.log("Friendship request accepted");
              acceptButton.textContent = "Accepted";
            } else {
              console.error("Friendship request failed:", data.error);
              acceptButton.textContent = "Error";
            }
          })
          .catch((error) => {
            console.error("There was a problem with the fetch operation:", error);
            friendshipButton.textContent = "Error";
          });
          window.location.reload();
      });


      declineButton.addEventListener("click", function () {
        fetch("/friendship_request/decline", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-TOKEN": csrfToken,
          },
          body: JSON.stringify({ request_id: requestId}),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            if (data.status === "success") {
              console.log("Friendship request accepted");
              declineButton.textContent = "Declined";
            } else {
              console.error("Friendship request failed:", data.error);
              declineButton.textContent = "Error";
            }
          })
          .catch((error) => {
            console.error("There was a problem with the fetch operation:", error);
            declineButton.textContent = "Error";
          });
          window.location.reload();
      });

      });
</script>
